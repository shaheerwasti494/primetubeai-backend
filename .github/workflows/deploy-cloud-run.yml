name: CI/CD to Cloud Run

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    permissions:
      id-token: write   # enable OIDC
      contents: read
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIP_PROVIDER }}
          service_account: ${{ secrets.WIP_SERVICE_ACCOUNT }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker auth for Artifact Registry
        run: gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}-docker.pkg.dev --quiet

      - name: Build & push image
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: ${{ secrets.GAR_LOCATION }}
        run: |
          IMAGE="$REGION-docker.pkg.dev/$PROJECT_ID/backend/primetubeai-backend:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t "$IMAGE" .
          docker push "$IMAGE"

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          REGION: ${{ secrets.CLOUD_RUN_REGION }}
          SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
        run: |
          gcloud run deploy "$SERVICE" \
            --project "$PROJECT_ID" \
            --region "$REGION" \
            --image "$IMAGE" \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars YOUTUBE_API_KEY="$YOUTUBE_API_KEY" \
            --port 8080

      - name: Show service URL
        run: gcloud run services describe ${{ secrets.CLOUD_RUN_SERVICE }} --region ${{ secrets.CLOUD_RUN_REGION }} --format='value(status.url)'
